steps:

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    id: Docker Build
    entrypoint: bash
    args:
      - -c
      - |
        echo $REPO_NAME
        echo $BRANCH_NAME
        echo $SHORT_SHA

        docker build --build-arg HASH_VERSION=$SHORT_SHA \
          -t us-east1-docker.pkg.dev/project-lab-355520/tux-app/main:$SHORT_SHA .

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    id: Docker Push
    entrypoint: bash
    args:
      - -c
      - |
        docker push us-east1-docker.pkg.dev/project-lab-355520/tux-app/main:$SHORT_SHA

  # Sonarqube Scanner
  - name: 'gcr.io/cloud-builders/docker'
    id: SonarQube Scanner
    entrypoint: bash
    args:
      - -c
      - |

        docker run --rm \
          -e SONAR_HOST_URL="http://35.193.8.14:9000" \
          -e SONAR_LOGIN="sqp_8afb1b679b82b75e0c094f5445bcd497e3399bc1" \
          -v "/workspace:/usr/src" \
          sonarsource/sonar-scanner-cli \
        -Dsonar.projectKey=aristides-neto_tux-app_AYHtgBDWKSVLYYPB0J1q \
        -Dsonar.sources=.

  # Altera manifesto Kubernetes para nova imagem criada
  - name: 'gcr.io/cloud-builders/docker'
    id: Update Kubernetes
    entrypoint: bash
    args:
      - -c
      - |
        
        git clone https://aristides-neto:$_BB_TOKEN@bitbucket.org/aristides-neto/tux-app-hml.git
        cd tux-app-hml
        echo "OLD:" && cat *-dp.yaml
        sed -i "s|\(.us-east1-docker.pkg.dev/project-lab-355520/tux-app/main:.*\)| us-east1-docker.pkg.dev/project-lab-355520/tux-app/main:$SHORT_SHA|g" *-dp.yaml
        echo && echo "NEW:" && cat *-dp.yaml
        git config --global user.email cgloud@pipeline.com
        git config --global user.name "CloudBuildCICD"
        git add .
        git commit -am "Atualizado a imagem para a versao $SHORT_SHA"
        git push

